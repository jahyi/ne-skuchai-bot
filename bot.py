import logging
import asyncio
import random
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from config import API_TOKEN

# –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ë–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üé≤ –î–∞–π –º–Ω–µ –Ω–µ –∑–∞—Å–∫—É—á–∞—Ç—å")]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ üëá"
)

# –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
activities = [
    "üòÇ –®—É—Ç–∫–∞: –ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ª—é–±—è—Ç —Ç–µ–º–Ω—É—é —Ç–µ–º—É? –ü–æ—Ç–æ–º—É —á—Ç–æ —Å–≤–µ—Ç–ª–∞—è ‚Äî —ç—Ç–æ –±–∞–≥, –∞ —Ç–µ–º–Ω–∞—è ‚Äî —Ñ–∏—á–∞!",
    "ü§ì –§–∞–∫—Ç –¥–Ω—è: –£ –æ—Å—å–º–∏–Ω–æ–≥–∞ —Ç—Ä–∏ —Å–µ—Ä–¥—Ü–∞. –î–≤–∞ –∏–∑ –Ω–∏—Ö –ø–µ—Ä–µ—Å—Ç–∞—é—Ç –±–∏—Ç—å—Å—è, –∫–æ–≥–¥–∞ –æ–Ω –ø–ª—ã–≤—ë—Ç!",
    "üéÆ –ú–∏–Ω–∏-–∏–≥—Ä–∞: –ó–∞–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10. –Ø —É–≥–∞–¥–∞—é –µ–≥–æ –ø–æ–∑–∂–µ üòâ",
    "üß† –ó–∞–¥–∞—á–∫–∞: –ß—Ç–æ —Ç—è–∂–µ–ª–µ–µ ‚Äî 1 –∫–≥ —Å—Ç–∞–ª–∏ –∏–ª–∏ 1 –∫–≥ –ø—É—Ö–∞?"
]

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(F.text == "/start")
async def send_welcome(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –¥–∞—Å—Ç —Ç–µ–±–µ –∑–∞—Å–∫—É—á–∞—Ç—å.\n–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!",
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
@dp.message(F.text == "üé≤ –î–∞–π –º–Ω–µ –Ω–µ –∑–∞—Å–∫—É—á–∞—Ç—å")
async def handle_random_action(message: Message):
    action = random.choice(activities)
    await message.answer(action)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
